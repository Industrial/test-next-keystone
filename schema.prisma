// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model List {
  id             String   @id @default(cuid())
  label          String   @unique @default("")
  creationDate   DateTime @default(now())
  updateDate     DateTime @default(now()) @updatedAt
  user           User?    @relation("List_user", fields: [userId], references: [id])
  userId         String?  @map("user")
  todos          Todo[]   @relation("List_todos")
  from_Todo_list Todo[]   @relation("Todo_list")

  @@index([userId])
}

model Tag {
  id             String   @id @default(cuid())
  label          String   @unique @default("")
  creationDate   DateTime @default(now())
  updateDate     DateTime @default(now()) @updatedAt
  user           User?    @relation("Tag_user", fields: [userId], references: [id])
  userId         String?  @map("user")
  todos          Todo[]   @relation("Tag_todos")
  from_Todo_tags Todo[]   @relation("Todo_tags")

  @@index([userId])
}

model Todo {
  id              String    @id @default(cuid())
  label           String    @unique @default("")
  slug            String    @unique @default("")
  description     String    @default("")
  isCompleted     Boolean   @default(false)
  priority        String?
  dueDate         DateTime?
  startDate       DateTime?
  endDate         DateTime?
  creationDate    DateTime  @default(now())
  updateDate      DateTime  @default(now()) @updatedAt
  user            User?     @relation("Todo_user", fields: [userId], references: [id])
  userId          String?   @map("user")
  list            List?     @relation("Todo_list", fields: [listId], references: [id])
  listId          String?   @map("list")
  tags            Tag[]     @relation("Todo_tags")
  from_List_todos List[]    @relation("List_todos")
  from_Tag_todos  Tag[]     @relation("Tag_todos")

  @@index([dueDate])
  @@index([startDate])
  @@index([endDate])
  @@index([userId])
  @@index([listId])
}

model User {
  id             String  @id @default(cuid())
  username       String  @unique @default("")
  email          String  @unique @default("")
  password       String
  isAdmin        Boolean @default(false)
  from_List_user List[]  @relation("List_user")
  from_Tag_user  Tag[]   @relation("Tag_user")
  from_Todo_user Todo[]  @relation("Todo_user")
}
const javascriptConfiguration = {
  files: ['**/*.{js,jsx}'],
  plugins: ['react', 'jsx-a11y', 'simple-import-sort'],
  extends: [
    'plugin:import/errors',
    'plugin:import/warnings',
    'airbnb',
    'airbnb/hooks',
    'prettier',
    'plugin:prettier/recommended',
  ],
  env: {
    node: true,
    es2021: true,
    browser: true,
  },
  rules: {
    'arrow-body-style': ['error', 'always'],
    'arrow-parens': ['error', 'always'],
    'class-methods-use-this': 'warn',
    'default-param-last': 'off',
    'import/extensions': 'off',
    'import/no-cycle': ['off'],
    'import/no-dynamic-require': ['off'],
    // 'import/no-extraneous-dependencies': ['error', { devDependencies: true }],
    'import/no-extraneous-dependencies': ['off'],
    'import/no-import-module-exports': 'off',
    'import/no-unresolved': 'off',
    'import/prefer-default-export': 'off',
    'jsx-a11y/anchor-is-valid': 'off',
    'jsx-a11y/click-events-have-key-events': 'off',
    'jsx-a11y/label-has-for': ['error', { required: { some: ['nesting', 'id'] } }],
    'jsx-a11y/no-noninteractive-element-interactions': 'off',
    'jsx-a11y/no-static-element-interactions': 'off',
    'linebreak-style': 'off',
    'max-len': ['error', { code: 130, ignoreTemplateLiterals: true, ignoreStrings: true }],
    'no-await-in-loop': ['off'],
    'no-console': ['off'],
    'no-continue': ['off'],
    'no-multi-spaces': 'warn',
    'no-nested-ternary': 'off',
    'no-plusplus': ['error', { allowForLoopAfterthoughts: true }],
    'no-promise-executor-return': 'warn',
    'no-restricted-exports': 'warn',
    'no-shadow': 'warn',
    'no-ternary': 'off',
    'no-underscore-dangle': ['off'],
    'no-unreachable-loop': 'warn',
    'no-unsafe-optional-chaining': 'warn',
    'no-unused-expressions': ['error', { allowShortCircuit: true }],
    'no-use-before-define': 'warn',
    'no-warning-comments': [1, { terms: ['TODO'], location: 'start' }],
    'prefer-regex-literals': ['warn'],
    'prefer-destructuring': ['off'],
    'prettier/prettier': ['error', { endOfLine: 'auto' }],
    'react-hooks/exhaustive-deps': 'off',
    'react-hooks/rules-of-hooks': 'off',
    'react/destructuring-assignment': 'warn',
    'react/display-name': 'off',
    'react/forbid-prop-types': 'warn',
    'react/function-component-definition': [
      2,
      {
        namedComponents: 'arrow-function',
        unnamedComponents: 'arrow-function',
      },
    ],
    'react/jsx-filename-extension': ['warn', { extensions: ['.js', '.jsx', '.ts', '.tsx'] }],
    'react/jsx-key': 'warn',
    'react/jsx-no-constructed-context-values': 'warn',
    'react/jsx-no-target-blank': 'off',
    'react/jsx-no-useless-fragment': 'warn',
    'react/jsx-one-expression-per-line': 'off',
    'react/jsx-props-no-spreading': ['off', { html: 'ignore' }],
    'react/jsx-wrap-multilines': [
      'error',
      {
        declaration: 'parens-new-line',
        assignment: 'parens-new-line',
        return: 'parens-new-line',
        arrow: 'parens-new-line',
        condition: 'ignore',
        logical: 'ignore',
        prop: 'ignore',
      },
    ],
    'react/no-array-index-key': 'warn',
    'react/no-unstable-nested-components': 'warn',
    'react/no-unused-class-component-methods': 'warn',
    'react/no-unused-prop-types': ['off'],
    'react/prefer-stateless-function': ['warn', { ignorePureComponents: false }],
    'react/prop-types': ['off'],
    'react/require-default-props': ['off'],
    'simple-import-sort/exports': ['error'],
    'simple-import-sort/imports': ['error'],
    'template-curly-spacing': 'off',
    camelcase: [
      'error',
      {
        properties: 'never',
        allow: ['UNSAFE_componentWillMount', 'green_bond_flag', 'reference_benchmark_flag'],
      },
    ],
    curly: ['error', 'all'],
    indent: 'off',
  },
}

const typescriptConfiguration = {
  ...javascriptConfiguration,

  files: ['**/*.{ts,tsx}'],
  parser: '@typescript-eslint/parser',
  plugins: ['react', '@typescript-eslint', 'simple-import-sort'],
  extends: [
    'plugin:import/errors',
    'plugin:import/warnings',
    'airbnb-typescript',
    'airbnb/hooks',
    'plugin:@typescript-eslint/recommended',
    'prettier',
    'plugin:prettier/recommended',
  ],
  parserOptions: {
    project: [`${__dirname}/tsconfig.json`],
    sourceType: 'module',
    ecmaVersion: 2020,
  },
  rules: {
    ...javascriptConfiguration.rules,
    '@typescript-eslint/default-param-last': 'off',
    '@typescript-eslint/no-empty-function': 'warn',
    '@typescript-eslint/no-shadow': 'warn',
    '@typescript-eslint/no-unused-expressions': 'warn',
    '@typescript-eslint/no-use-before-define': 'warn',
    '@typescript-eslint/no-var-requires': 'warn',
    '@typescript-eslint/indent': 'off',
  },
  settings: {},
}

// const graphqlConfiguration = {
//   files: ['**/*.graphql'],
//   parser: '@graphql-eslint/eslint-plugin',
//   plugins: ['@graphql-eslint'],
//   parserOptions: {
//     // schema: 'schema.graphql',
//     // operations: 'backend/documents/**/*.graphql',
//   },
//   rules: {
//     indent: ['error', 2],
//     'no-multiple-empty-lines': [
//       'error',
//       {
//         max: 1,
//         maxEOF: 0,
//       },
//     ],
//     // '@graphql-eslint/avoid-duplicate-fields': ['error'],
//     // '@graphql-eslint/avoid-operation-name-prefix': [
//     //   'error',
//     //   {
//     //     keywords: ['get', 'fetch'],
//     //   },
//     // ],
//     '@graphql-eslint/fields-on-correct-type': ['error'],
//     '@graphql-eslint/fragments-on-composite-type': ['error'],
//     '@graphql-eslint/known-argument-names': ['error'],
//     '@graphql-eslint/known-directives': ['error'],
//     '@graphql-eslint/known-type-names': ['error'],
//     '@graphql-eslint/lone-anonymous-operation': ['error'],
//     '@graphql-eslint/lone-schema-definition': ['error'],
//     '@graphql-eslint/naming-convention': [
//       'error',
//       {
//         EnumValueDefinition: 'UPPER_CASE',
//         FieldDefinition: 'camelCase',
//         FragmentDefinition: 'PascalCase',
//         InputValueDefinition: 'camelCase',
//         OperationDefinition: 'camelCase',
//         allowLeadingUnderscore: false,
//         allowTrailingUnderscore: false,
//         types: 'PascalCase',
//       },
//     ],
//     '@graphql-eslint/no-anonymous-operations': ['error'],
//     '@graphql-eslint/no-case-insensitive-enum-values-duplicates': ['error'],
//     '@graphql-eslint/no-fragment-cycles': ['error'],
//     // '@graphql-eslint/no-operation-name-suffix': ['error'],
//     '@graphql-eslint/no-undefined-variables': ['error'],
//     '@graphql-eslint/possible-fragment-spread': ['error'],
//     '@graphql-eslint/provided-required-arguments': ['error'],
//     '@graphql-eslint/scalar-leafs': ['error'],
//     '@graphql-eslint/unique-argument-names': ['error'],
//     '@graphql-eslint/unique-directive-names': ['error'],
//     '@graphql-eslint/unique-directive-names-per-location': ['error'],
//     '@graphql-eslint/unique-enum-value-names': ['error'],
//     '@graphql-eslint/unique-field-definition-names': ['error'],
//     '@graphql-eslint/unique-fragment-name': ['error'],
//     '@graphql-eslint/unique-input-field-names': ['error'],
//     '@graphql-eslint/unique-operation-name': ['error'],
//     '@graphql-eslint/unique-operation-types': ['error'],
//     '@graphql-eslint/unique-type-names': ['error'],
//     '@graphql-eslint/unique-variable-names': ['error'],
//     '@graphql-eslint/value-literals-of-correct-type': ['error'],
//     '@graphql-eslint/variables-are-input-types': ['error'],
//     '@graphql-eslint/variables-in-allowed-position': ['error'],
//   },
// }

const yamlConfiguration = {
  files: ['**/*.yml'],
  plugins: ['yml'],
  extends: ['plugin:yml/standard'],
  rules: {
    'yml/quotes': [
      'error',
      {
        prefer: 'single',
        avoidEscape: true,
      },
    ],
  },
}

const jsonConfiguration = {
  files: ['**/*.json', '.eslintrc.json'],
  plugins: ['jsonc'],
  extends: ['plugin:jsonc/recommended-with-json'],
  rules: {},
}

module.exports = {
  overrides: [
    javascriptConfiguration,
    typescriptConfiguration,
    // graphqlConfiguration,
    yamlConfiguration,
    jsonConfiguration,
  ],
}
